{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {},
   "outputs": [],
   "source": [
    "from cpymad.madx import Madx\n",
    "import numpy as np\n",
    "\n",
    "import sys \n",
    "# Load webtools.py from PS directory to use Bokeh plotting function\n",
    "sys.path.insert(0, \"/eos/project/a/acc-models/public/ps/2021/_scripts/web/\")\n",
    "from webtools import webtools\n",
    "\n",
    "# package to import files from Gitlab\n",
    "import requests"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Setting up the MAD-X environment\n",
    "\n",
    "The MAD-X input files can be either directly loaded from Gitlab or from the EOS optics repository. "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 38,
   "metadata": {},
   "outputs": [],
   "source": [
    "madx = Madx()\n",
    "madx.input('BEAM, PARTICLE=PROTON, PC = {{ conf['momentum'] | string }}')\n",
    "madx.input('BRHO := BEAM->PC * 3.3356;')\n",
    "# Loading files from EOS\n",    
    "# call sequence of main units\n",
    "madx.call('/eos/project/a/acc-models/public/ps/{{ branch }}/ps_mu.seq')\n",
    "# call sequence of straight section elements\n",
    "madx.call('/eos/project/a/acc-models/public/ps/{{ branch }}/ps_ss.seq')\n",
    "# call configuration strength file\n",
    "madx.call('/eos/project/a/acc-models/public/ps/{{ branch }}/{{ conf['directory'] }}{{ conf['str'] }}')\n",
    "\n",
    "# Loading files from Gitlab\n",
    "# call sequence of main units\n",
    "# MU_sequence = requests.get('https://gitlab.cern.ch/acc-models/acc-models-ps/raw/{{ branch }}/ps_mu.seq')\n",
    "# madx.input(MU_sequence.content)\n",
    "# call sequence of straight section elements\n",
    "# SS_sequence = requests.get('https://gitlab.cern.ch/acc-models/acc-models-ps/raw/{{ branch }}/ps_ss.seq')\n",
    "# madx.input(SS_sequence.content)\n",
    "# call configuration strength file\n",
    "# strength = requests.get('https://gitlab.cern.ch/acc-models/acc-models-ps/raw/{{ branch }}/{{ conf['directory'] }}{{ conf['str'] }}')\n",
    "# madx.input(strength.content)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Performing a PTC Twiss"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 39,
   "metadata": {
    "scrolled": true
   },
   "outputs": [],
   "source": [
    "madx.input('use, sequence = PS')\n",
    "madx.input('ptc_create_universe')\n",
    "madx.input('ptc_create_layout, time=false,model=2, method=6, nst=5, exact=true')\n",
    "madx.input('ptc_twiss, closed_orbit, icase=56, no=4, slice_magnets')\n",
    "madx.input('ptc_end')"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Print non-zero entries of the PTC Twiss summary table"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 40,
   "metadata": {},
   "outputs": [],
   "source": [
    "twiss = madx.table['ptc_twiss_summary']\n",
    "for k in twiss.keys():\n",
    "    if twiss[k][0] > 0:\n",
    "        print(k + ' = ' + str(twiss[k][0]))"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Plot the optics functions"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 68,
   "metadata": {},
   "outputs": [],
   "source": [
    "twiss = '/eos/project/a/acc-models/public/ps/{{ branch }}/{{ conf['directory'] }}{{ conf['str'][:-3] }}pkl'\n",
    "\n",
    "webtools.create_optics_plots(twiss, '{{ conf['plot_html'] }}', ['{{ conf['str'][:-3] }}tfs'], 'inline', closed_orbit = {{ conf['closed_orbit'] }})"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython2",
   "version": "3.7.6"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
